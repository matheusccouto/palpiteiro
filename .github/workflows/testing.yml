name: Unit Testing
on:
  pull_request:
    branches:
      - main
      - dev
jobs:
  quality:
    runs-on: ubuntu-latest
    env:
      BUCKET: palpiteiro-test
      GCP_SERVICE_ACCOUNT_TYPE: service_account
      GCP_SERVICE_ACCOUNT_PROJECT_ID: ${{ secrets.GCP_SERVICE_ACCOUNT_PROJECT_ID_DEV }}
      GCP_SERVICE_ACCOUNT_PRIVATE_KEY_ID: ${{ secrets.GCP_SERVICE_ACCOUNT_PRIVATE_KEY_ID_DEV }}
      GCP_SERVICE_ACCOUNT_PRIVATE_KEY: ${{ secrets.GCP_SERVICE_ACCOUNT_PRIVATE_KEY_DEV }}
      GCP_SERVICE_ACCOUNT_CLIENT_EMAIL: ${{ secrets.GCP_SERVICE_ACCOUNT_CLIENT_EMAIL_DEV }}
      GCP_SERVICE_ACCOUNT_CLIENT_ID: ${{ secrets.GCP_SERVICE_ACCOUNT_CLIENT_ID_DEV }}
      GCP_SERVICE_ACCOUNT_AUTH_URI: https://accounts.google.com/o/oauth2/auth
      GCP_SERVICE_ACCOUNT_TOKEN_URI: https://oauth2.googleapis.com/token
      GCP_SERVICE_ACCOUNT_AUTH_PROVIDER_X509_CERT_URL: https://www.googleapis.com/oauth2/v1/certs
      GCP_SERVICE_ACCOUNT_CLIENT_X509_CERT_URL: ${{ secrets.GCP_SERVICE_ACCOUNT_CLIENT_X509_CERT_URL_DEV }}
    strategy:
      fail-fast: false
      matrix:
        folder:
          - function_points
          - lambda_draft
          - lambda_extract_cartola_matches
          - lambda_extract_cartola_players
          - lambda_extract_cartola_scouts
          - lambda_extract_fivethirtyeight_spi
          - lambda_load_gbq
          - lambda_read_gbq
          - lambda_transform_cartola_matches
          - lambda_transform_cartola_players
          - lambda_transform_cartola_scouts
    steps:
      - uses: actions/checkout@v2
      - name: Set up Python 3.9
        uses: actions/setup-python@v3
        with:
          python-version: 3.9
      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_KEY }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET }}
          aws-region: us-east-1
      - name: Install Dependencies
        run: |
          python -m pip install --upgrade pip wheel
          python -m pip install pytest-cov
          if [ -f requirements-dev.txt ]; then pip install -r requirements-dev.txt; fi
          if [ -f requirements.txt ]; then pip install -r requirements.txt; fi
        working-directory: ./${{ matrix.folder }}
      - name: Test with Pytest
        run: pytest ${{ matrix.folder }} --cov=./ --cov-report=xml --log-cli-level=INFO
      - name: Upload coverage to Codecov
        uses: codecov/codecov-action@v3